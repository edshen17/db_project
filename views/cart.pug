extends layout

block content
    .container-fluid
      .row
        .col-8
          ul.list-group
            each item in itemCart
              .list-group-item.list-group-item-action.d-flex.justify-content-between.align-items-center
                .flex-column
                  a(href='/item/' + item._id) #[strong #{item.itemName}]
                  p $#{item.price}
                  if item.inStock
                    span.badge.badge-info.badge-pill  In stock
                  else 
                    span.badge.badge-info.badge-pill  Out of stock
                  form(action='/users/' + userId + '/item/' + item._id, method='POST')
                    label(for=item._id)
                        | Quantity:
                        select(name=item._id)
                          if item.quantityToBuy < item.stock
                            - for(let i = 1; i <= item.stock; i++)
                              if i === item.quantityToBuy
                                option.form-control(value=i selected) #{i}
                              else 
                                option.form-control(value=i) #{i}
                          else
                            - for(let i = 1; i <= item.quantityToBuy; i++)
                              if i === item.quantityToBuy
                                option.form-control(value=i selected) #{i}
                              else 
                                option.form-control(value=i) #{i}
                  a(data-method="delete" href='/users/' + userId + '/item/' + item._id + '/delete' class='delete') Delete

                            
                .image-parent
                  img.img-thumbnail.resize(src='' + item.itemImageURL, alt='' + item.itemName)
        .col
          ul.list-group
              .list-group-item.list-group-item-action.d-flex.justify-content-between.align-items-center
                  .flex-column
                      form(action='/users/' + userId + '/item/', method='POST')
                        if userId
                            h3#subtotal Subtotal (#{userCartLength} item(s)): $#{subtotal}
                            button.btn.btn-primary.btn-block(type='submit')
                                | Purchase items
                        else
                            a.btn.btn-primary(href='/users/login', role='button') Log in to purchase
        script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js')
        script(src='https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js')
        script.
          let itemCart = JSON.parse('!{JSON.stringify(itemCart)}');
          let userId = JSON.parse('!{JSON.stringify(userId)}');
          $(function() { // listens for a change when the user changes value in the select form and updates the db
              $('select').change(function() {
                  let $itemQuantity = $(this).val();
                  let $itemId = $(this).attr('name');
                  let $oldSubtotal = $('#subtotal').text();
                  $.ajax({
                      url: `/users/${userId}/item/${$itemId}/${$itemQuantity}`,
                      type: 'PUT',
                  }).done(updateSubtotal());
              });
          });

          function updateSubtotal() {
            setTimeout(function() { // set timeout so the request's json is up to date (rather than getting the old data values)
              $.getJSON( `/users/${userId}/cart/json`, function( data ) {
                  $('#subtotal').text(`Subtotal (${data.userCartLength} item(s)): $${data.subtotal}`);
                  });
            }, 50)
          }
    footer.pt-5.footer.mx-3
      hr
      p 	&copy; Edwin Shen